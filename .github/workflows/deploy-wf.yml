name: Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    
permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/src
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install Docker CLI and Compose v2
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common gnupg
        
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

        docker --version
        docker compose version


    - name: Run NIDS
      run: | # This is a modified version of scripts/deploy.sh for CI/CD
        if ! grep -q "# NIDS" /etc/hosts; then
            echo -e "\n# NIDS\n127.0.0.1 mongo" | sudo tee -a /etc/hosts
            echo "NIDS entry added to /etc/hosts"
        else
            echo "NIDS entry already exists in /etc/hosts"
        fi

        echo "Checking Existing Docker Environment..."
        docker compose --profile gui down

        echo "Starting Services..."
        docker compose up -d

        echo "Starting GUI..."
        docker compose --profile gui up -d || true # Dont fail CI for TS errors from random node packages
    
