include:
  - model/compose.yml
  - feeder/compose.yml
  - offline_feeder/compose.yml
  - logger/compose.yml
  - store/compose.yml

services:
  mongo:
    container_name: mongo
    image: mongo:jammy
    restart: always
    expose:
      - 27017
    extra_hosts:
      - mongo:127.0.0.1
    ports:
      - 27017:27017
    healthcheck:
      test: echo "rs.status()" | mongosh --port 27017
      interval: 5s
      timeout: 30s
      start_period: 30s
      retries: 30
    volumes:
      - mongo-data:/data/db
      - /workspaces/NIDS/deploy/mongo/init_replset.js:/docker-entrypoint-initdb.d/01-init_replset.js:ro
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017", "--quiet"]
    attach: false # wont monitor mongo logs

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    ports:
      - 8081:8081
    restart: always
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: pass
      ME_CONFIG_MONGODB_SERVER: mongo

  webserver:
    build:
      context: ../
      dockerfile: deploy/webserver/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      WEBSERVER_MONGO_URL: mongodb://root:example@mongo:27017/
    profiles:
      - gui

volumes:
  mongo-data:
    name: mongo-data

networks:
  default:
    name: components
